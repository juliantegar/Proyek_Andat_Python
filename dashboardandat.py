# -*- coding: utf-8 -*-
"""dashboardandat

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MAtXQLwmTXrV_gOtlDfCPubABM5IuWJO
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Memuat dataset
day_df = pd.read_csv("day.csv")
hour_df = pd.read_csv("hour.csv")

# Judul utama dashboard
st.title("Proyek Analisis Data")
st.sidebar.header("Bike Sharing")

# Menampilkan subjudul dan deskripsi
st.subheader("Visualisasi Data")
st.write("Performa Pengguna Sepeda per Bulan pada Tahun 2011-2012")

# ðŸ“Œ **Visualisasi Pengguna Sepeda per Bulan**
plt.figure(figsize=(24,5))
monthly_means = day_df['cnt'].groupby(day_df['dteday']).mean()
plt.scatter(monthly_means.index, monthly_means.values, c="#72BCD4", s=10, marker='o')
plt.plot(monthly_means.index, monthly_means.values)
plt.xlabel('Bulan')
plt.ylabel('Jumlah')
plt.title('Grafik Jumlah Pengguna Sepeda per Bulan pada Tahun 2011-2012')
st.pyplot(plt)

# ðŸ“Œ **Visualisasi Penggunaan Sepeda berdasarkan Jam**
st.write('Performa Penggunaan Sepeda berdasarkan Jam')
jam_sewa = hour_df.groupby(by='hr').agg({'cnt': ['min', 'mean', 'max']}).reset_index()
plt.figure(figsize=(10,5))
plt.plot(jam_sewa['hr'], jam_sewa[('cnt', 'mean')], marker='o', linewidth=2, color='green')
plt.title('Penggunaan Sepeda berdasarkan Jam')
plt.xlabel('Jam')
plt.xticks(jam_sewa['hr'])
plt.ylabel('Jumlah Penyewaan')
plt.grid(True)
st.pyplot(plt)

# ðŸ“Œ **Perbandingan Penggunaan Sepeda berdasarkan Hari**
st.write('Perbandingan Penggunaan Sepeda berdasarkan Hari')
day_mapping = {0: 'Minggu', 1: 'Senin', 2: 'Selasa', 3: 'Rabu', 4: 'Kamis', 5: 'Jumat', 6: 'Sabtu'}
day_df['weekday'] = day_df['weekday'].map(day_mapping)
hari_sewa = day_df.groupby(['workingday', 'weekday'])['cnt'].mean().reset_index()

plt.figure(figsize=(10, 6))
sns.barplot(x='weekday', y='cnt', hue='workingday', data=hari_sewa, palette=['red', 'blue'])
plt.title('Perbandingan Rata-rata Penyewaan Sepeda: Hari Kerja vs Hari Libur')
plt.xlabel('Hari')
plt.ylabel('Rata-rata Penyewaan')
plt.legend(title="Workingday", labels=['Libur (0)', 'Hari Kerja (1)'])
plt.grid(axis='y', linestyle='--', alpha=0.7)
st.pyplot(plt)

# ðŸ“Œ **Visualisasi Jumlah Pengguna Sepeda Berdasarkan Musim**
st.write("Jumlah Pengguna Sepeda Berdasarkan Musim")
season_mapping = {1: 'Spring', 2: 'Summer', 3: 'Fall', 4: 'Winter'}
day_df['season'] = day_df['season'].replace(season_mapping)
season_usage = day_df.groupby('season')['cnt'].mean().reset_index()

plt.figure(figsize=(12, 5))
sns.barplot(x='season', y='cnt', data=season_usage, color='brown')
plt.title('Rata-rata Penyewaan Sepeda Berdasarkan Musim')
plt.xlabel('Musim')
plt.ylabel('Rata-rata Penyewaan Sepeda')
plt.grid(axis='y', linestyle='--', alpha=0.7)
st.pyplot(plt)

# ðŸ“Œ **Penggunaan Sepeda berdasarkan Kondisi Cuaca dengan Filter**
st.write('Penggunaan Sepeda berdasarkan Kondisi Cuaca')

# Konversi kode cuaca menjadi label yang lebih mudah dibaca
weather_mapping = {1: 'Clear', 2: 'Mist', 3: 'Light Snow', 4: 'Heavy Rain'}
day_df['weathersit'] = day_df['weathersit'].replace(weather_mapping)

# Sidebar filter interaktif
selected_weather = st.sidebar.multiselect(
    "Pilih Kondisi Cuaca:", 
    options=day_df['weathersit'].unique(), 
    default=day_df['weathersit'].unique()
)

# Filter data berdasarkan pilihan pengguna
filtered_df = day_df[day_df['weathersit'].isin(selected_weather)]

# Menghitung rata-rata penyewaan sepeda berdasarkan kondisi cuaca yang dipilih
weather_usage = filtered_df.groupby('weathersit')['cnt'].mean().reset_index()

# Visualisasi data dengan filter cuaca
plt.figure(figsize=(12, 5))
sns.barplot(x='weathersit', y='cnt', data=weather_usage, palette="coolwarm")
plt.title('Rata-rata Penyewaan Sepeda Berdasarkan Kondisi Cuaca')
plt.xlabel('Kondisi Cuaca')
plt.ylabel('Rata-rata Penyewaan Sepeda')
plt.grid(axis='y', linestyle='--', alpha=0.7)
st.pyplot(plt)

# Copyright
st.caption('Copyright Â© Dicoding 2023')
